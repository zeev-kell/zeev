@mixin display-flex() {
  display : -webkit-flex;
  display : flex;
}

/* 
	主轴方向 
	row row-reverse column column-reverse
 */

@mixin flex-direction($option : row) {
  -webkit-flex-direction : $option;
  -ms-flex-direction     : $option;
  flex-direction         : $option;
}

@mixin flex-direction-column() {
  -webkit-flex-direction : column;
  -ms-flex-direction     : column;
  flex-direction         : column;
}

/*
  	换行 
  	nowrap wrap wrap-reverse
 */

@mixin flex-wrap($option: wrap) {
  -webkit-flex-wrap : $option;
  -ms-flex-wrap     : $option;
  flex-wrap         : $option;
}

/* <flex-direction> || <flex-wrap> */

@mixin flex-flow($option: row nowrap) {
  -webkit-flex-flow : $option;
  flex-flow         : $option;
}

/*
 	主轴对齐方式
 	flex-start flex-end cneter space-between space-around
 */

@mixin justify-content($str: flex-start) {
  -webkit-box-pack        : $str;
  -webkit-justify-content : $str;
  justify-content         : $str;
}

/*
 	交叉轴对齐方式
 	flex-start flex-end cneter baseline stretch
 */

@mixin align-items($option: center) {
  -webkit-box-align   : $option;
  -webkit-align-items : $option;
  align-items         : $option;
}

/*
	多主轴对齐方式
 	flex-start flex-end cneter space-between space-around
 */

@mixin align-content($option: center) {
  -webkit-align-items : $option;
  align-items         : $option;
}

/* === 子元素 === */

/* 排序 */

@mixin order($int: 0) {
  order : $int;
}

/* 放大 */

@mixin flex-grow($int: 0) {
}

/* 缩小 */

@mixin flex-shrink($int: 0) {
}

/* 大小 */

@mixin flex-basis($str: auto) {
}

/*
	none || <flex-grow> || <flex-shrink> ? || <flex-basis>

    默认值为0 1 auto
    flex-grow,
        属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。
    flex-shrink
        属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
    flex-basis
        属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。
        浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小
*/

@mixin flex($option: 1 1 100%) {
  -webkit-flex : $option;
  flex         : $option;
}

/*
	单独对齐方式
	auto flex-start flex-end cneter baseline stretch

 */

@mixin align-self($str: auto) {
}
